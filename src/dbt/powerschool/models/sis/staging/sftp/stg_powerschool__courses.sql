select
    * except (
        `status`,
        add_to_gpa,
        credit_hours,
        crhrweight,
        dcid,
        exclude_ada,
        excludefromclassrank,
        excludefromgpa,
        excludefromhonorroll,
        excludefromstoredgrades,
        gpa_addedvalue,
        gradescaleid,
        id,
        iscareertech,
        isfitnesscourse,
        ispewaiver,
        maxclasssize,
        maxcredit,
        prerequisites,
        programid,
        regavailable,
        sched_balanceterms,
        sched_blockstart,
        sched_closesectionaftermax,
        sched_concurrentflag,
        sched_consecutiveperiods,
        sched_consecutiveterms,
        sched_coursepackage,
        sched_do_not_print,
        sched_frequency,
        sched_labflag,
        sched_labfrequency,
        sched_labperiodspermeeting,
        sched_lengthinnumberofterms,
        sched_loadpriority,
        sched_lunchcourse,
        sched_maximumdayspercycle,
        sched_maximumenrollment,
        sched_maximumperiodsperday,
        sched_minimumdayspercycle,
        sched_minimumperiodsperday,
        sched_multiplerooms,
        sched_periodspercycle,
        sched_periodspermeeting,
        sched_repeatsallowed,
        sched_scheduled,
        sched_sectionsoffered,
        sched_substitutionallowed,
        sched_teachercount,
        sched_usepreestablishedteams,
        sched_usesectiontypes,
        sched_validextradaycombinations,
        sched_year,
        schoolgroup,
        schoolid,
        sectionstooffer,
        targetclasssize,
        transaction_date,
        vocational,
        whomodifiedid
    ),

    prerequisites as prerequisitesvalue,
    sched_validextradaycombinations as validextradaycombinations,

    cast(dcid as int) as dcid,
    cast(id as int) as id,
    cast(exclude_ada as int) as exclude_ada,
    cast(excludefromclassrank as int) as excludefromclassrank,
    cast(excludefromgpa as int) as excludefromgpa,
    cast(excludefromhonorroll as int) as excludefromhonorroll,
    cast(excludefromstoredgrades as int) as excludefromstoredgrades,
    cast(gradescaleid as int) as gradescaleid,
    cast(iscareertech as int) as iscareertech,
    cast(maxclasssize as int) as maxclasssize,
    cast(programid as int) as programid,
    cast(regavailable as int) as regavailable,
    cast(sched_frequency as int) as sched_frequency,
    cast(sched_labfrequency as int) as sched_labfrequency,
    cast(sched_labperiodspermeeting as int) as sched_labperiodspermeeting,
    cast(sched_lengthinnumberofterms as int) as sched_lengthinnumberofterms,
    cast(sched_loadpriority as int) as sched_loadpriority,
    cast(sched_maximumdayspercycle as int) as sched_maximumdayspercycle,
    cast(sched_maximumenrollment as int) as sched_maximumenrollment,
    cast(sched_maximumperiodsperday as int) as sched_maximumperiodsperday,
    cast(sched_minimumdayspercycle as int) as sched_minimumdayspercycle,
    cast(sched_minimumperiodsperday as int) as sched_minimumperiodsperday,
    cast(sched_periodspercycle as int) as sched_periodspercycle,
    cast(sched_periodspermeeting as int) as sched_periodspermeeting,
    cast(sched_sectionsoffered as int) as sched_sectionsoffered,
    cast(sched_teachercount as int) as sched_teachercount,
    cast(sched_year as int) as sched_year,
    cast(schoolgroup as int) as schoolgroup,
    cast(schoolid as int) as schoolid,
    cast(sectionstooffer as int) as sectionstooffer,
    cast(`status` as int) as `status`,
    cast(targetclasssize as int) as targetclasssize,
    cast(vocational as int) as vocational,
    cast(whomodifiedid as int) as whomodifiedid,

    cast(add_to_gpa as float64) as add_to_gpa,
    cast(credit_hours as float64) as credit_hours,
    cast(crhrweight as float64) as crhrweight,
    cast(gpa_addedvalue as float64) as gpa_addedvalue,
    cast(maxcredit as float64) as maxcredit,

    cast(transaction_date as timestamp) as transaction_date,

    if(isfitnesscourse = 'true', 1, 0) as isfitnesscourse,
    if(ispewaiver = 'true', 1, 0) as ispewaiver,
    if(sched_balanceterms = 'true', 1, 0) as sched_balanceterms,
    if(sched_blockstart = 'true', 1, 0) as sched_blockstart,
    if(sched_closesectionaftermax = 'true', 1, 0) as sched_closesectionaftermax,
    if(sched_concurrentflag = 'true', 1, 0) as sched_concurrentflag,
    if(sched_consecutiveperiods = 'true', 1, 0) as sched_consecutiveperiods,
    if(sched_consecutiveterms = 'true', 1, 0) as sched_consecutiveterms,
    if(sched_coursepackage = 'true', 1, 0) as sched_coursepackage,
    if(sched_do_not_print = 'true', 1, 0) as sched_do_not_print,
    if(sched_labflag = 'true', 1, 0) as sched_labflag,
    if(sched_lunchcourse = 'true', 1, 0) as sched_lunchcourse,
    if(sched_multiplerooms = 'true', 1, 0) as sched_multiplerooms,
    if(sched_repeatsallowed = 'true', 1, 0) as sched_repeatsallowed,
    if(sched_scheduled = 'true', 1, 0) as sched_scheduled,
    if(sched_substitutionallowed = 'true', 1, 0) as sched_substitutionallowed,
    if(sched_usepreestablishedteams = 'true', 1, 0) as sched_usepreestablishedteams,
    if(sched_usesectiontypes = 'true', 1, 0) as sched_usesectiontypes,
from {{ source("powerschool_sftp", "src_powerschool__courses") }}
