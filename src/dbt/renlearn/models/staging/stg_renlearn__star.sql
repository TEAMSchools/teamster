select
    _dagster_partition_fiscal_year as `_dagster_partition_fiscal_year`,
    _dagster_partition_subject as `_dagster_partition_subject`,
    actbenchmarkcategory as `act_benchmark_category`,
    americanindianoralaskanative as `american_indian_or_alaska_native`,
    asian as `asian`,
    assessmentid as `assessment_id`,
    assessmentnumber as `assessment_number`,
    assessmentstatus as `assessment_status`,
    assessmenttype as `assessment_type`,
    birthdate as `birth_date`,
    blackorafricanamerican as `black_or_african_american`,
    classcode as `class_code`,
    classrenaissanceid as `class_renaissance_id`,
    classsourcedid as `class_sourced_id`,
    completeddate as `completed_date`,
    completeddatelocal as `completed_date_local`,
    coursecode as `course_code`,
    coursename as `course_name`,
    courserenaissanceid as `course_renaissance_id`,
    coursesourcedid as `course_sourced_id`,
    currentsgp as `current_sgp`,
    deactivationreason as `deactivation_reason`,
    districtbenchmarkcategorylevel as `district_benchmark_category_level`,
    districtbenchmarkcategoryname as `district_benchmark_category_name`,
    districtbenchmarkmaxpercentilerank as `district_benchmark_max_percentile_rank`,
    districtbenchmarkminpercentilerank as `district_benchmark_min_percentile_rank`,
    districtbenchmarknumberofcategorylevels
    as `district_benchmark_number_of_category_levels`,
    districtbenchmarkproficient as `district_benchmark_proficient`,
    districtidentifier as `district_identifier`,
    districtname as `district_name`,
    districtrenaissanceid as `district_renaissance_id`,
    districtsourcedid as `district_sourced_id`,
    enrollmentstatus as `enrollment_status`,
    estimatedoralreadingfluency as `estimated_oral_reading_fluency`,
    extratime as `extra_time`,
    gender as `gender`,
    grade3_assessmentattempts as `grade3_assessment_attempts`,
    grade3_passingscore as `grade3_passing_score`,
    grade3_passingstatus as `grade3_passing_status`,
    gradeplacement as `grade_placement`,
    groupid as `group_id`,
    grouporclassname as `group_or_class_name`,
    hispanicorlatino as `hispanic_or_latino`,
    instructionalreadinglevel as `instructional_reading_level`,
    launchdate as `launch_date`,
    lexile as `lexile`,
    lexilerange as `lexile_range`,
    literacyclassification as `literacy_classification`,
    lowerlexilezoneofproximaldevelopment as `lower_lexile_zone_of_proximal_development`,
    lowerzoneofproximaldevelopment as `lower_zone_of_proximal_development`,
    multirace as `multi_race`,
    nativehawaiianorotherpacificislander as `native_hawaiian_or_other_pacific_islander`,
    normalcurveequivalent as `normal_curve_equivalent`,
    opengrowthscore as `open_growth_score`,
    partnershipforassessmentofreadinessforcollegeandcareers
    as `partnership_for_assessment_of_readiness_for_college_and_careers`,
    percentilerank as `percentile_rank`,
    quantile as `quantile`,
    raschscore as `rasch_score`,
    renaissancebenchmarkcategorylevel as `renaissance_benchmark_category_level`,
    renaissancebenchmarkcategorymaxpercentilerank
    as `renaissance_benchmark_category_max_percentile_rank`,
    renaissancebenchmarkcategoryminpercentilerank
    as `renaissance_benchmark_category_min_percentile_rank`,
    renaissancebenchmarkcategoryname as `renaissance_benchmark_category_name`,
    renaissanceclientid as `renaissance_client_id`,
    satbenchmarkcategory as `sat_benchmark_category`,
    scaledscore as `scaled_score`,
    schoolbenchmarkcategorylevel as `school_benchmark_category_level`,
    schoolbenchmarkcategoryname as `school_benchmark_category_name`,
    schoolbenchmarkmaxpercentilerank as `school_benchmark_max_percentile_rank`,
    schoolbenchmarkminpercentilerank as `school_benchmark_min_percentile_rank`,
    schoolbenchmarknumberofcategorylevels
    as `school_benchmark_number_of_category_levels`,
    schoolbenchmarkproficient as `school_benchmark_proficient`,
    schoolidentifier as `school_identifier`,
    schoolname as `school_name`,
    schoolrenaissanceid as `school_renaissance_id`,
    schoolsourcedid as `school_sourced_id`,
    schoolyear as `school_year`,
    schoolyearenddate as `school_year_end_date`,
    schoolyearstartdate as `school_year_start_date`,
    screeningperiodwindowname as `screening_period_window_name`,
    screeningwindowenddate as `screening_window_end_date`,
    screeningwindowstartdate as `screening_window_start_date`,
    smarterbalancedassessmentconsortium as `smarter_balanced_assessment_consortium`,
    standarderrorofmeasurement as `standard_error_of_measurement`,
    statebenchmarkassessmentname as `state_benchmark_assessment_name`,
    statebenchmarkcategorylevel as `state_benchmark_category_level`,
    statebenchmarkcategoryname as `state_benchmark_category_name`,
    statebenchmarkmaxscaledscore as `state_benchmark_max_scaled_score`,
    statebenchmarkminscaledscore as `state_benchmark_min_scaled_score`,
    statebenchmarknumberofcategorylevels as `state_benchmark_number_of_category_levels`,
    statebenchmarkproficient as `state_benchmark_proficient`,
    studentemail.string_value as `student_email`,
    studentfirstname as `student_first_name`,
    studentgrowthpercentilefallfall as `student_growth_percentile_fall_fall`,
    studentgrowthpercentilefallspring as `student_growth_percentile_fall_spring`,
    studentgrowthpercentilefallwinter as `student_growth_percentile_fall_winter`,
    studentgrowthpercentilespringfall as `student_growth_percentile_spring_fall`,
    studentgrowthpercentilespringspring as `student_growth_percentile_spring_spring`,
    studentgrowthpercentilewinterspring as `student_growth_percentile_winter_spring`,
    studentlastname as `student_last_name`,
    studentmiddlename as `student_middle_name`,
    studentrenaissanceid as `student_renaissance_id`,
    takenat as `taken_at`,
    takenatbyipaddress as `taken_at_by_ip_address`,
    teacherdisplayid as `teacher_display_id`,
    teacheremail as `teacher_email`,
    teacherfirstname as `teacher_first_name`,
    teacheridentifier as `teacher_identifier`,
    teacherlastname as `teacher_last_name`,
    teachermiddlename as `teacher_middle_name`,
    teacherrenaissanceid as `teacher_renaissance_id`,
    teachersourcedid as `teacher_sourced_id`,
    teacheruserid as `teacher_user_id`,
    totalcorrect as `total_correct`,
    totalpossible as `total_possible`,
    totaltimeinseconds as `total_time_in_seconds`,
    unifiedscore as `unified_score`,
    upperlexilezoneofproximaldevelopment as `upper_lexile_zone_of_proximal_development`,
    upperzoneofproximaldevelopment as `upper_zone_of_proximal_development`,
    white as `white`,
    coalesce(audio.string_value, safe_cast(audio.double_value as string)) as `audio`,
    coalesce(
        currentgrade.string_value, safe_cast(currentgrade.long_value as string)
    ) as `current_grade`,
    coalesce(grade.string_value, safe_cast(grade.long_value as string)) as `grade`,
    coalesce(
        gradeequivalent.string_value, safe_cast(gradeequivalent.double_value as string)
    ) as `grade_equivalent`,
    coalesce(
        studentstateid.string_value, safe_cast(studentstateid.double_value as string)
    ) as `student_state_id`,
    coalesce(
        districtstateid.long_value, safe_cast(districtstateid.double_value as int)
    ) as `district_state_id`,
    coalesce(
        renaissancebenchmarkcategorynumberoflevels.long_value,
        safe_cast(renaissancebenchmarkcategorynumberoflevels.double_value as int)
    ) as `renaissance_benchmark_category_number_of_levels`,
    coalesce(
        schoolstateid.long_value, safe_cast(schoolstateid.double_value as int)
    ) as `school_state_id`,
    coalesce(
        studentdisplayid.long_value, safe_cast(studentdisplayid.double_value as int)
    ) as `student_display_id`,
    coalesce(
        studentidentifier.long_value, safe_cast(studentidentifier.double_value as int)
    ) as `student_identifier`,
    coalesce(
        studentsourcedid.long_value, safe_cast(studentsourcedid.double_value as int)
    ) as `student_sourced_id`,
    coalesce(
        studentuserid.long_value, safe_cast(studentuserid.double_value as int)
    ) as `student_user_id`,
    coalesce(
        teacherstateid.long_value, safe_cast(teacherstateid.double_value as int)
    ) as `teacher_state_id`,
from {{ source("renlearn", "src_renlearn__star") }}
