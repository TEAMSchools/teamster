# https://github.com/dagster-io/dagster-cloud-hybrid-quickstart
# https://github.com/dagster-io/dagster-cloud-action

name: Dagster Cloud Hybrid Deployment

on:
  workflow_call:
    inputs:
      code-location:
        required: true
        type: string
      python-version:
        type: string
        required: false
        default: 3.12

concurrency:
  # Cancel in-progress deploys to the same branch
  group: ${{ github.workflow }}-${{ github.ref }}-${{ github.event_name }}
  cancel-in-progress: true

env:
  DAGSTER_PROJECT_DIR: .
  DAGSTER_CLOUD_ORGANIZATION: ${{ vars.DAGSTER_ORGANIZATION_ID }}
  DAGSTER_CLOUD_API_TOKEN: ${{ secrets.DAGSTER_CLOUD_AGENT_TOKEN }}
  REGISTRY_IMAGE:
    ${{ vars.GCP_REGION }}-docker.pkg.dev/${{ vars.GCP_PROJECT_ID }}/teamster/${{
    inputs.code-location }}
  DAGSTER_CLOUD_YAML_PATH:
    src/teamster/code_locations/${{ inputs.code-location }}/dagster-cloud.yaml
  IMAGE_TAG: ${{ inputs.code-location }}-${{ github.sha }}-${{ github.run_id }}

permissions:
  id-token: write
  contents: read
  pull-requests: write

jobs:
  dagster-cloud-deploy:
    runs-on: ubuntu-latest
    outputs:
      result: ${{ steps.prerun.outputs.result }}
    steps:
      # If this is a closed PR the prerun step closes the branch deployment and returns
      # output.result='skip' which is used to skip other steps in this workflow.
      # https://github.com/dagster-io/dagster-cloud-action/blob/main/actions/utils/prerun/action.yml
      - name: Pre-run checks
        id: prerun
        uses: dagster-io/dagster-cloud-action/actions/utils/prerun@main

      # https://github.com/actions/checkout
      - name: Checkout
        uses: actions/checkout@v4
        if: steps.prerun.outputs.result != 'skip'
        with:
          ref: ${{ github.head_ref }}

      # https://github.com/google-github-actions/auth
      - name: Authenticate to Google Cloud
        id: auth
        uses: google-github-actions/auth@v2
        if: steps.prerun.outputs.result != 'skip'
        with:
          project_id: ${{ vars.GCP_PROJECT_ID }}
          workload_identity_provider:
            projects/${{ vars.GCP_PROJECT_NUMBER
            }}/locations/global/workloadIdentityPools/github/providers/teamster

      # https://github.com/google-github-actions/setup-gcloud
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
        if: steps.prerun.outputs.result != 'skip'

      - name: gcloud auth configure-docker
        if: steps.prerun.outputs.result != 'skip'
        run: gcloud auth configure-docker ${{ vars.GCP_REGION }}-docker.pkg.dev

      # https://github.com/docker/metadata-action
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        if: steps.prerun.outputs.result != 'skip'
        with:
          images: ${{ env.REGISTRY_IMAGE }}

      # https://github.com/docker/setup-buildx-action
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        if: steps.prerun.outputs.result != 'skip'
        with:
          platforms: |
            linux/amd64
            linux/arm64

      # https://github.com/docker/build-push-action
      - name: Build and upload Docker image
        id: build
        uses: docker/build-push-action@v6
        if: steps.prerun.outputs.result != 'skip'
        with:
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ env.REGISTRY_IMAGE }}:${{ env.IMAGE_TAG }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            PYTHON_VERSION=${{ inputs.python-version }}
            CODE_LOCATION=${{ inputs.code-location }}

      # Validate dagster_cloud.yaml and the connection to dagster.cloud
      # https://github.com/dagster-io/dagster-cloud-action/blob/main/actions/utils/dagster-cloud-cli/action.yml
      - name: Validate configuration
        id: ci-validate
        uses: dagster-io/dagster-cloud-action/actions/utils/dagster-cloud-cli@main
        if: steps.prerun.outputs.result != 'skip'
        with:
          command:
            ci check --project-dir ${{ env.DAGSTER_PROJECT_DIR }} --dagster-cloud-yaml-path ${{
            env.DAGSTER_CLOUD_YAML_PATH }}

      # Parse dagster_cloud.yaml, detect if this is branch deployment and initialize
      # the build session
      # https://github.com/dagster-io/dagster-cloud-action/blob/main/actions/utils/ci-init/action.yml
      - name: Initialize build session
        id: ci-init
        uses: dagster-io/dagster-cloud-action/actions/utils/ci-init@main
        if: steps.prerun.outputs.result != 'skip'
        with:
          project_dir: ${{ env.DAGSTER_PROJECT_DIR }}
          dagster_cloud_yaml_path: ${{ env.DAGSTER_CLOUD_YAML_PATH }}
          # The full deployment name. If this run is for a PR,
          # this value is ignored and a branch deployment is used.
          deployment: prod

      # https://github.com/dagster-io/dagster-cloud-action/blob/main/actions/utils/dagster-cloud-cli/action.yml
      - name: Update build session with image tag
        id: ci-set-build-output
        uses: dagster-io/dagster-cloud-action/actions/utils/dagster-cloud-cli@main
        if: steps.prerun.outputs.result != 'skip'
        with:
          command:
            ci set-build-output --location-name=${{ inputs.code-location }} --image-tag=${{
            env.IMAGE_TAG }}

      # Deploy all code locations in this build session to Dagster Cloud
      # https://github.com/dagster-io/dagster-cloud-action/blob/main/actions/utils/dagster-cloud-cli/action.yml
      - name: Deploy to Dagster Cloud
        id: ci-deploy
        uses: dagster-io/dagster-cloud-action/actions/utils/dagster-cloud-cli@main
        if: steps.prerun.outputs.result != 'skip'
        with:
          command: ci deploy

      # Update a PR comment - this runs always() so the comment is updated on success
      # and failure
      # https://github.com/dagster-io/dagster-cloud-action/blob/main/actions/utils/dagster-cloud-cli/action.yml
      - name: Update PR comment for branch deployments
        id: ci-notify
        uses: dagster-io/dagster-cloud-action/actions/utils/dagster-cloud-cli@main
        if: steps.prerun.outputs.result != 'skip' && always()
        with:
          command: ci notify --project-dir=${{ env.DAGSTER_PROJECT_DIR }}

      # Generate a summary that shows up on the Workflow Summary page
      # https://github.com/dagster-io/dagster-cloud-action/blob/main/actions/utils/dagster-cloud-cli/action.yml
      - name: Generate a summary
        id: ci-summary
        uses: dagster-io/dagster-cloud-action/actions/utils/dagster-cloud-cli@main
        if: steps.prerun.outputs.result != 'skip' && always()
        with:
          command: ci status --output-format=markdown >> $GITHUB_STEP_SUMMARY
