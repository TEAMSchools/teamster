# https://github.com/dagster-io/dagster-cloud-hybrid-quickstart
# https://github.com/dagster-io/dagster-cloud-action

name: Dagster Cloud Hybrid Deployment

on:
  workflow_call:
    inputs:
      code-location:
        required: true
        type: string

concurrency:
  # Cancel in-progress deploys to the same branch
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  CODE_LOCATION: ${{ inputs.code-location }}
  DAGSTER_CLOUD_API_TOKEN: ${{ secrets.DAGSTER_CLOUD_AGENT_TOKEN }}
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  DAGSTER_CLOUD_ORGANIZATION: ${{ vars.DAGSTER_ORGANIZATION_ID }}
  IMAGE_REGISTRY:
    ${{ vars.GCP_REGION }}-docker.pkg.dev/${{ vars.GCP_PROJECT_ID }}/teamster-${{
    inputs.code-location }}/teamster-${{ inputs.code-location }}
  DAGSTER_PROJECT_DIR: .
  DAGSTER_CLOUD_YAML_PATH: .dagster/dagster-cloud-${{ inputs.code-location }}.yaml

jobs:
  dagster-cloud-deploy:
    runs-on: ubuntu-20.04

    permissions:
      contents: read
      id-token: write
      pull-requests: write

    steps:
      # If this is a closed PR the prerun step closes the branch deployment and returns
      # output.result='skip' which is used to skip other steps in this workflow.
      - name: Pre-run checks
        id: prerun
        uses: dagster-io/dagster-cloud-action/actions/utils/prerun@v0.1

      # Checkout the project
      # https://github.com/actions/checkout
      - name: Checkout
        uses: actions/checkout@v4
        if: steps.prerun.outputs.result != 'skip'
        with:
          ref: ${{ github.head_ref }}

      # Validate dagster_cloud.yaml and the connection to dagster.cloud
      - name: Validate configuration
        id: ci-validate
        if: steps.prerun.outputs.result != 'skip'
        uses: dagster-io/dagster-cloud-action/actions/utils/dagster-cloud-cli@v0.1
        with:
          command:
            "ci check --project-dir ${{ env.DAGSTER_PROJECT_DIR }} --dagster-cloud-yaml-path ${{
            env.DAGSTER_CLOUD_YAML_PATH }}"

      # Parse dagster_cloud.yaml, detect if this is branch deployment and initialize
      # the build session
      - name: Initialize build session
        id: ci-init
        if: steps.prerun.outputs.result != 'skip'
        uses: dagster-io/dagster-cloud-action/actions/utils/ci-init@v0.1
        with:
          project_dir: ${{ env.DAGSTER_PROJECT_DIR }}
          dagster_cloud_yaml_path: ${{ env.DAGSTER_CLOUD_YAML_PATH }}
          # The full deployment name. If this run is for a PR,
          # this value is ignored and a branch deployment is used.
          deployment: prod

      # Any value can be used as the docker image tag. It is recommended to use a
      # unique value for each build so that multiple builds do not overwrite each other.
      - name: Generate docker image tag
        id: generate-image-tag
        if: steps.prerun.outputs.result != 'skip'
        run:
          echo "IMAGE_TAG=$GITHUB_SHA-$GITHUB_RUN_ID-$GITHUB_RUN_ATTEMPT" >> $GITHUB_ENV && echo
          $IMAGE_TAG

      # Enable buildx for caching
      # https://github.com/docker/setup-buildx-action
      - name: Set up Docker Buildx
        if: steps.prerun.outputs.result != 'skip'
        uses: docker/setup-buildx-action@v3

      # Building and deploying the docker image requires a login step specific to the
      # container registry.
      # https://github.com/google-github-actions/auth
      - id: auth
        name: Authenticate to Google Cloud
        if: steps.prerun.outputs.result != 'skip'
        uses: google-github-actions/auth@v2
        with:
          project_id: "{{ vars.GCP_PROJECT_ID }}"
          workload_identity_provider:
            "projects/${{ vars.GCP_PROJECT_NUMBER
            }}/locations/global/workloadIdentityPools/github/providers/teamster"

      # For each code location, the "build-push-action" builds the docker image and a
      # "set-build-output" command records the image tag for each code location.
      # https://github.com/docker/build-push-action
      - name: Build and upload Docker image
        if: steps.prerun.outputs.result != 'skip'
        uses: docker/build-push-action@v5
        with:
          context: .
          file: src/teamster/${{ env.CODE_LOCATION }}/Dockerfile
          push: true
          tags: ${{ env.IMAGE_REGISTRY }}:${{ env.IMAGE_TAG }}-${{ env.CODE_LOCATION }}

      - name: Update build session with image tag
        id: ci-set-build-output
        if: steps.prerun.outputs.result != 'skip'
        uses: dagster-io/dagster-cloud-action/actions/utils/dagster-cloud-cli@v0.1
        with:
          command:
            ci set-build-output --location-name=${{ env.CODE_LOCATION }} --image-tag=${{
            env.IMAGE_TAG }}-${{ env.CODE_LOCATION }}

      # Deploy all code locations in this build session to Dagster Cloud
      - name: Deploy to Dagster Cloud
        id: ci-deploy
        if: steps.prerun.outputs.result != 'skip'
        uses: dagster-io/dagster-cloud-action/actions/utils/dagster-cloud-cli@v0.1
        with:
          command: ci deploy

      # Update a PR comment - this runs always() so the comment is updated on success
      # and failure
      - name: Update PR comment for branch deployments
        id: ci-notify
        if: steps.prerun.outputs.result != 'skip' && always()
        uses: dagster-io/dagster-cloud-action/actions/utils/dagster-cloud-cli@v0.1
        with:
          command: "ci notify --project-dir=${{ env.DAGSTER_PROJECT_DIR }}"

      # Generate a summary that shows up on the Workflow Summary page
      - name: Generate a summary
        id: ci-summary
        if: steps.prerun.outputs.result != 'skip' && always()
        uses: dagster-io/dagster-cloud-action/actions/utils/dagster-cloud-cli@v0.1.27
        with:
          command: ci status --output-format=markdown >> $GITHUB_STEP_SUMMARY
