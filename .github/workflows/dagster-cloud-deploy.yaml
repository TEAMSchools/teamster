# https://github.com/dagster-io/dagster-cloud-hybrid-quickstart
# https://github.com/dagster-io/dagster-cloud-action
# https://docs.docker.com/build/ci/github-actions/multi-platform/#distribute-build-across-multiple-runners

name: Dagster Cloud Hybrid Deployment

on:
  workflow_call:
    inputs:
      code-location:
        required: true
        type: string
      python-version:
        type: string
        required: false
        default: "3.12"
      dbt-version:
        type: string
        required: false
        default: "1.7"

concurrency:
  # Cancel in-progress deploys to the same branch
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  DAGSTER_PROJECT_DIR: .
  DAGSTER_CLOUD_ORGANIZATION: ${{ vars.DAGSTER_ORGANIZATION_ID }}
  DAGSTER_CLOUD_API_TOKEN: ${{ secrets.DAGSTER_CLOUD_AGENT_TOKEN }}
  REGISTRY_IMAGE:
    ${{ vars.GCP_REGION }}-docker.pkg.dev/${{ vars.GCP_PROJECT_ID }}/teamster/${{
    inputs.code-location }}
  DAGSTER_CLOUD_YAML_PATH: src/teamster/${{ inputs.code-location }}/dagster-cloud.yaml
  IMAGE_TAG:
    ${{ inputs.code-location }}-${{ github.sha }}-${{ github.run_id }}-${{ github.run_attempt }}

permissions:
  id-token: write
  contents: read
  pull-requests: write

jobs:
  prerun:
    runs-on: ubuntu-20.04 # dagster ci requires python 3.8 default
    outputs:
      result: ${{ steps.prerun.outputs.result }}
    steps:
      # If this is a closed PR the prerun step closes the branch deployment and returns
      # output.result='skip' which is used to skip other steps in this workflow.
      # https://github.com/dagster-io/dagster-cloud-action/blob/main/actions/utils/prerun/action.yml
      - name: Pre-run checks
        id: prerun
        uses: dagster-io/dagster-cloud-action/actions/utils/prerun@v0.1

  dbt:
    needs:
      - prerun
    runs-on: ubuntu-latest
    if: needs.prerun.outputs.result != 'skip'
    steps:
      # https://github.com/actions/checkout
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref }}

      # https://github.com/actions/setup-python
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ inputs.python-version }}
          cache: pip

      - name: Install dbt
        run: pip install setuptools pyarrow "dbt-bigquery>=${{ inputs.dbt-version }}"

      - name: dbt deps
        run: dbt deps --project-dir=./src/dbt/${{ inputs.code-location }}

      - name: dbt parse
        run:
          dbt parse --project-dir=./src/dbt/${{ inputs.code-location }} --profiles-dir=./src/dbt/${{
          inputs.code-location }}

      # https://github.com/actions/upload-artifact
      - name: Upload dbt artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dbt_artifacts
          path: ${{ github.workspace }}/src/dbt/${{ inputs.code-location }}
          if-no-files-found: error

  build:
    needs:
      - prerun
      - dbt
    runs-on: ubuntu-latest
    if: needs.prerun.outputs.result != 'skip'
    strategy:
      fail-fast: false
      matrix:
        platform:
          - linux/amd64
          - linux/arm64
    steps:
      - name: Prepare
        run: |
          platform=${{ matrix.platform }}
          echo "PLATFORM_PAIR=${platform//\//-}" >> "${GITHUB_ENV}"

      # https://github.com/actions/checkout
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref }}

      # https://github.com/actions/download-artifact
      - name: Download dbt artifacts
        uses: actions/download-artifact@v4
        with:
          name: dbt_artifacts
          path: ${{ github.workspace }}/src/dbt/${{ inputs.code-location }}

      # https://github.com/google-github-actions/auth
      - name: Authenticate to Google Cloud
        id: auth
        uses: google-github-actions/auth@v2
        with:
          project_id: ${{ vars.GCP_PROJECT_ID }}
          workload_identity_provider:
            projects/${{ vars.GCP_PROJECT_NUMBER
            }}/locations/global/workloadIdentityPools/github/providers/teamster

      # https://github.com/google-github-actions/setup-gcloud
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - name: gcloud auth configure-docker
        run: gcloud auth configure-docker ${{ vars.GCP_REGION }}-docker.pkg.dev

      # https://github.com/docker/metadata-action
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY_IMAGE }}

      # https://github.com/docker/setup-buildx-action
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # https://github.com/docker/build-push-action
      - name: Build and push by digest
        id: build
        uses: docker/build-push-action@v5
        with:
          context: .
          cache-from: type=gha,scope=build-${{ env.PLATFORM_PAIR }}
          cache-to: type=gha,mode=max,scope=build-${{ env.PLATFORM_PAIR }}
          platforms: ${{ matrix.platform }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            PYTHON_VERSION=${{ inputs.python-version }}
          outputs:
            type=image,name=${{ env.REGISTRY_IMAGE
            }},push-by-digest=true,name-canonical=true,push=true

      - name: Export digest
        run: |
          mkdir -p /tmp/digests
          digest="${{ steps.build.outputs.digest }}"
          touch "/tmp/digests/${digest#sha256:}"

      # https://github.com/actions/upload-artifact
      - name: Upload digest
        uses: actions/upload-artifact@v4
        with:
          name: digests-${{ env.PLATFORM_PAIR }}
          path: /tmp/digests/*
          if-no-files-found: error
          retention-days: 1

  merge:
    runs-on: ubuntu-latest
    needs:
      - prerun
      - dbt
      - build
    if: needs.prerun.outputs.result != 'skip'
    steps:
      # https://github.com/actions/download-artifact
      - name: Download digests
        uses: actions/download-artifact@v4
        with:
          path: /tmp/digests
          pattern: digests-*
          merge-multiple: true

      # https://github.com/google-github-actions/auth
      - name: Authenticate to Google Cloud
        id: auth
        uses: google-github-actions/auth@v2
        with:
          project_id: ${{ vars.GCP_PROJECT_ID }}
          workload_identity_provider:
            projects/${{ vars.GCP_PROJECT_NUMBER
            }}/locations/global/workloadIdentityPools/github/providers/teamster

      # https://github.com/google-github-actions/setup-gcloud
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - name: gcloud auth configure-docker
        run: gcloud auth configure-docker ${{ vars.GCP_REGION }}-docker.pkg.dev

      # https://github.com/docker/setup-buildx-action
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Create manifest list and push
        working-directory: /tmp/digests
        run: |
          docker buildx imagetools create -t ${{ env.REGISTRY_IMAGE }}:${{ env.IMAGE_TAG }} $(printf '${{ env.REGISTRY_IMAGE }}@sha256:%s ' *)

      - name: Inspect image
        run: |
          docker buildx imagetools inspect ${{ env.REGISTRY_IMAGE }}:${{ env.IMAGE_TAG }}

      # https://github.com/GoogleCloudPlatform/gcr-cleaner
      - uses: docker://us-docker.pkg.dev/gcr-cleaner/gcr-cleaner/gcr-cleaner-cli
        with:
          args: >-
            -repo=us-central1-docker.pkg.dev/teamster-332318/teamster/${{ inputs.code-location }}
            -keep=1 -tag-filter-any=.* -grace=30m

  deploy:
    runs-on: ubuntu-20.04 # dagster ci requires python 3.8 default
    needs:
      - prerun
      - dbt
      - build
      - merge
    steps:
      # https://github.com/actions/checkout
      - name: Checkout
        uses: actions/checkout@v4
        if: needs.prerun.outputs.result != 'skip'
        with:
          ref: ${{ github.head_ref }}

      # Validate dagster_cloud.yaml and the connection to dagster.cloud
      # https://github.com/dagster-io/dagster-cloud-action/blob/main/actions/utils/dagster-cloud-cli/action.yml
      - name: Validate configuration
        id: ci-validate
        uses: dagster-io/dagster-cloud-action/actions/utils/dagster-cloud-cli@v0.1
        if: needs.prerun.outputs.result != 'skip'
        with:
          command:
            ci check --project-dir ${{ env.DAGSTER_PROJECT_DIR }} --dagster-cloud-yaml-path ${{
            env.DAGSTER_CLOUD_YAML_PATH }}

      # Parse dagster_cloud.yaml, detect if this is branch deployment and initialize
      # the build session
      # https://github.com/dagster-io/dagster-cloud-action/blob/main/actions/utils/ci-init/action.yml
      - name: Initialize build session
        id: ci-init
        uses: dagster-io/dagster-cloud-action/actions/utils/ci-init@v0.1
        if: needs.prerun.outputs.result != 'skip'
        with:
          project_dir: ${{ env.DAGSTER_PROJECT_DIR }}
          dagster_cloud_yaml_path: ${{ env.DAGSTER_CLOUD_YAML_PATH }}
          # The full deployment name. If this run is for a PR,
          # this value is ignored and a branch deployment is used.
          deployment: prod

      # https://github.com/dagster-io/dagster-cloud-action/blob/main/actions/utils/dagster-cloud-cli/action.yml
      - name: Update build session with image tag
        id: ci-set-build-output
        uses: dagster-io/dagster-cloud-action/actions/utils/dagster-cloud-cli@v0.1
        if: needs.prerun.outputs.result != 'skip'
        with:
          command:
            ci set-build-output --location-name=${{ inputs.code-location }} --image-tag=${{
            env.IMAGE_TAG }}

      # Deploy all code locations in this build session to Dagster Cloud
      # https://github.com/dagster-io/dagster-cloud-action/blob/main/actions/utils/dagster-cloud-cli/action.yml
      - name: Deploy to Dagster Cloud
        id: ci-deploy
        uses: dagster-io/dagster-cloud-action/actions/utils/dagster-cloud-cli@v0.1
        if: needs.prerun.outputs.result != 'skip'
        with:
          command: ci deploy

      # Update a PR comment - this runs always() so the comment is updated on success
      # and failure
      # https://github.com/dagster-io/dagster-cloud-action/blob/main/actions/utils/dagster-cloud-cli/action.yml
      - name: Update PR comment for branch deployments
        id: ci-notify
        uses: dagster-io/dagster-cloud-action/actions/utils/dagster-cloud-cli@v0.1
        if: needs.prerun.outputs.result != 'skip' && always()
        with:
          command: ci notify --project-dir=${{ env.DAGSTER_PROJECT_DIR }}

      # Generate a summary that shows up on the Workflow Summary page
      # https://github.com/dagster-io/dagster-cloud-action/blob/main/actions/utils/dagster-cloud-cli/action.yml
      - name: Generate a summary
        id: ci-summary
        uses: dagster-io/dagster-cloud-action/actions/utils/dagster-cloud-cli@v0.1.27
        if: needs.prerun.outputs.result != 'skip' && always()
        with:
          command: ci status --output-format=markdown >> $GITHUB_STEP_SUMMARY
