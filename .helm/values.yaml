# README:
# - If using a fixed tag for images, changing the image pull policy to anything other than "Always"
#   will use a cached/stale image.
---
# Specify secrets to run containers based on images in private registries. See:
# https://kubernetes.io/docs/concepts/containers/images/#referring-to-an-imagepullsecrets-on-a-pod
imagePullSecrets: []

serviceAccount:
  # Specifies whether a service account is created for the Dagster Cloud agent.
  #
  # If false, you must ensure the service account has the correct permissions for the agent.
  create: true

  # Specifies the name for service account for the Dagster Cloud agent.
  #
  # By default, this name is autogenerated.
  name: ""

  annotations: {}

####################################################################################################
# Dagster Cloud: Config for Dagster Cloud's hosted resources
####################################################################################################
dagsterCloud:
  # Specify the name of the secret containing the Dagster Cloud API token.
  agentTokenSecretName: "dagster-cloud-agent-token"

  # Specify the Dagster Cloud deployment (e.g. dev, staging, prod) for the agent.
  deployment: ~

  # Specify your organization's Dagster Cloud endpoint.
  #
  # By default, this will be "https://<organization_name>.agent.dagster.cloud".
  # Your organization name will automatically be determined using your API token.
  endpoint: ~

  # An optional label which will identify the agent on the status page.
  agentLabel: ~

####################################################################################################
# Dagster Cloud Agent: Configuration for the Dagster Cloud (User) Agent
####################################################################################################
dagsterCloudAgent:
  image:
    repository: "docker.io/dagster/dagster-cloud-agent"
    # When a tag field is specified as nil, it will default as the Helm chart version
    tag: ~
    pullPolicy: "Always"

  # heartbeatTolerance is used to set how long the agent will run for without a hearbeat from the
  # hosted cloud. Set heartbeatTolerance to overwrite the default.
  # heartbeatTolerance: 300

  # initContainers are used for testing, since the host cloud will not be available while it is starting
  initContainers: []

  # Additional environment variables to set.
  # A Kubernetes ConfigMap will be created with these environment variables. See:
  # https://kubernetes.io/docs/concepts/configuration/configmap/
  #
  # Example:
  #
  # env:
  #   ENV_ONE: one
  #   ENV_TWO: two
  env: {}

  annotations: {}
  nodeSelector: {}
  affinity: {}
  tolerations: []

  # Security context for the agent pod.
  # https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
  #
  # To run the agent as a non-root user, use the following config. This will be enabled by default in a
  # future release.
  #
  # podSecurityContext:
  #   runAsUser: 1001 # provided non-root user in image versions 0.14.0 and above
  podSecurityContext: {}

  # Security context for the agent container.
  securityContext: {}

  resources: {}

####################################################################################################
# Workspace: Configuration for pods (launched by the agent) that run Dagster user code
####################################################################################################
workspace:
  # Specifies the pull policy for the code servers launched by the agent
  pullPolicy: "Always"

  # Specifies the service account that the code servers will use.
  #
  # If set, you must provide the named service account and role bindings yourself.
  # You can optionally do so in the `extraManifests` field.
  serviceAccountName: ~

  # Specifies the namespace in which the agent launches the code servers. By default,
  # this will be the Helm release namespace.
  namespace: ~

  # Additional environment variables can be retrieved and set from Secrets. See:
  # https://kubernetes.io/docs/concepts/configuration/secret/#use-case-as-container-environment-variables
  #
  # Example:
  #
  # envSecrets:
  #   - name: secret
  #     optional: true
  envSecrets: []

  # Additional variables from the existing environment can be passed into any launched pods.
  #
  # Example:
  #
  # envVars:
  #   - "FOO_ENV_VAR" (Will pull the value of FOO_ENV_VAR from the agent process)
  #   - "BAR_ENV_VAR=baz_value" (Will set the value of BAR_ENV_VAR to baz_value)
  envVars: []

  # Additional environment variables can be retrieved and set from ConfigMaps. See:
  # https://kubernetes.io/docs/tasks/configure-pod-container/configure-pod-configmap/#configure-all-key-value-pairs-in-a-configmap-as-container-environment-variables
  #
  # Example:
  #
  # envConfigMaps:
  #   - name: config-map
  envConfigMaps: []

  # Additional volumes that should be included in any Pods created by the agent. See:
  # https://v1-18.docs.kubernetes.io/docs/reference/generated/kubernetes-api/v1.18/#volume-v1-core
  #
  # Example:
  #
  # volumes:
  #   - name: my-volume
  #     configMap: my-config-map
  volumes: []

  # Additional volume mounts that should be included in the container in any Pods created by the agent. See:
  # See: https://v1-18.docs.kubernetes.io/docs/reference/generated/kubernetes-api/v1.18/#volumemount-v1-core
  #
  # Example:
  #
  # volumeMounts:
  #   - name: test-volume
  #     mountPath: /opt/dagster/test_folder
  #     subPath: test_file.yaml
  volumeMounts: []

  # Additional labels that should be included in the pods created by the agent. See:
  # https://kubernetes.io/docs/concepts/overview/working-with-objects/labels
  #
  # Example:
  # labels:
  #   my_label_key: my_label_value
  labels: {}

  # Default compute resource requirements for the pods created by the agent. See:
  # https://kubernetes.io/docs/concepts/configuration/manage-resources-containers
  #
  # Example:
  # resources:
  #   limits:
  #     cpu: 100m
  #     memory: 128Mi
  #   requests:
  #     cpu: 100m
  #     memory: 128Mi
  resources: {}


  # Specifies the timeout when creating a new Kubernetes deployment for a code server.
  #
  # If not set, defaults to 5 minutes.
  deploymentStartupTimeout: ~

  # Specifies an amount of time that the agent will wait for an image to fail to pull
  # when spinning up a new deployment before it will consider the image to be invalid and mark
  # it as failed. Can be used in cases where a new image has been pushed but caching issues
  # prevent the image from being able to be pulled right away.
  #
  # If not set, defaults to 30 seconds.
  imagePullGracePeriod: ~

  # Specifies the timeout when waiting for a code server to be ready.
  #
  # If not set, defaults to 60 seconds.
  serverProcessStartupTimeout: ~


####################################################################################################
# Compute Logs: (Optional) settings for compute logging
####################################################################################################
computeLogs:
  # Specifies if compute logs will be forwarded to dagster cloud
  enabled: true

####################################################################################################
# Python Logs (Optional) settings for configuring Python logging behavior in your jobs.
####################################################################################################
# Example:
# pythonLogs:
#   # The names of python loggers that will be captured as Dagster logs
#   managedPythonLoggers:
#     - foo_logger
#   # The log level for the instance. Logs emitted below this severity will be ignored.
#   # One of [NOTSET, DEBUG, INFO, WARNING, WARN, ERROR, FATAL, CRITICAL]
#   pythonLogLevel: INFO
#   # Python log handlers that will be applied to all Dagster logs
#   dagsterHandlerConfig:
#     handlers:
#       myHandler:
#         class: logging.FileHandler
#         filename: "/logs/my_dagster_logs.log"
#         mode: "a"
pythonLogs: {}

####################################################################################################
# Agent Replicas: (Optional, Experimental) Enable a new feature for running multiple agents.
# Requires both the agent and user code to be on 0.13.10 or later.
####################################################################################################
agentReplicas:
  enabled: false

####################################################################################################
# Extra Manifests: (Optional) Create additional k8s resources within this chart
####################################################################################################
extraManifests:
# Useful for providing extra configuration -- e.g. RBAC/serviceAccount information, etc. --
# for user workspace pods.
#  # You can also set default container resource requests/limits for the namespace
#  #   * To override these for dagster system containers; edit the resources sections of
#  #     this values yaml -  eg: dagsterCloudAgent.resources
#  - apiVersion: v1
#    kind: LimitRange
#    metadata:
#      name: default-container-resources
#    spec:
#      limits:
#        - default:
#            cpu: 250m
#            memory: 512Mi
#          defaultRequest:
#            cpu: 100m
#            memory: 256Mi
#          type: Container
#  # Example 2:
#  - apiVersion: cloud.google.com/v1beta1
#    kind: BackendConfig
#    metadata:
#      name: "{{ .Release.Name }}-backend-config"
#      labels:
#      {{- include "dagster.labels" . | nindent 6 }}
#      spec:
#        securityPolicy:
#          name: "gcp-cloud-armor-policy-test"

