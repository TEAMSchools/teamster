[project]
name = "teamster"
version = "0.1.0"
description = ""
authors = [
  { name = "Charlie Bini", email = "5003326+cbini@users.noreply.github.com" },
]
dependencies = [
  "dagster>=1.1.7",
  "dagster-cloud>=1.1.7",
  "dagster-gcp>=0.17.7",
  "dagster-ssh>=0.17.7",
  "dagster-k8s>=0.17.7",
  "powerschool>=4.0.1",
  "pyodbc>=4.0.34",
  "gspread>=5.6.2",
  "oracledb>=1.1.1",
]
requires-python = ">=3.11,<3.12"
license = { text = "GPL-3.0-or-later" }

[project.optional-dependencies]

[build-system]
requires = ["pdm-pep517>=1.0.0"]
build-backend = "pdm.pep517.api"

[tool]
[tool.pdm]
[tool.pdm.dev-dependencies]
dev = ["pytest"]

[tool.pdm.scripts]
_.env_file = "env/.env"
post_lock = { shell = "pdm export -f requirements -o requirements.txt", help = "Export the locked packages set to requirements.txt" }
clean = { shell = "bash .pdm/scripts/clean.sh", help = "Remove all build, test, coverage, and Python artifacts" }
docs-build = { shell = "mkdocs build", help = "Build the MkDocs documentation" }
docs-serve = { shell = "mkdocs serve", help = "Run the builtin development server" }
docs-deploy = { shell = "mkdocs gh-deploy", help = "Deploy your documentation to GitHub Pages" }
test = { shell = "pdm run pytest", help = "Run tests with the default Python" }
location-init = { shell = "bash .pdm/scripts/location-init.sh", help = "Create a new branch for a Dagster Code Location" }
gcloud-init = { shell = "bash .pdm/scripts/gcloud-init.sh", help = "Set up GCP" }
k8s-secret = { shell = "bash .pdm/scripts/k8s-secret.sh", help = "Update k8s secret for branch" }
helm-install = { shell = "bash .helm/scripts/install.sh", help = "Update Dagster Cloud Agent via Helm" }
merge = { shell = "bash .pdm/scripts/merge.sh", help = "Merge main branch into location branches" }
open-pr = { shell = "bash .pdm/scripts/open-pr.sh", help = "Open a pull request for all staging branches" }
validate = { shell = "bash .dagster/validate.sh", help = "Validate Dagster imports and configs" }
stats = { shell = "python .dagster/stats/run-stats.py", help = "Generate run stats" }
