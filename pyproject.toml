[project]
name = "teamster"
version = "0.1.0"
description = ""
authors = [
  { name = "Charlie Bini", email = "5003326+cbini@users.noreply.github.com" },
]
dependencies = [
  "dagster>=1.0.16",
  "dagster-cloud>=1.0.16",
  "dagster-gcp>=0.16.16",
  "dagster-ssh>=0.16.16",
  "dagster-k8s>=0.16.16",
  "powerschool>=4.0.1",
  "pyodbc>=4.0.34",
  "gspread>=5.6.2",
  "oracledb>=1.1.1",
]
requires-python = ">=3.10,<3.11"
license = { text = "GPL-3.0-or-later" }

[project.optional-dependencies]

[build-system]
requires = ["pdm-pep517>=1.0.0"]
build-backend = "pdm.pep517.api"

[tool]
[tool.pdm]
[tool.pdm.dev-dependencies]
dev = ["pytest"]

[tool.pdm.build]
package-dir = "src"
includes = ["src/teamster/*"]

[tool.pdm.scripts]
_.env_file = "env/kippcamden.env"
post_lock = { shell = "pdm export -f requirements -o requirements.txt", help = "Export the locked packages set to requirements.txt" }
clean-build = { shell = "bash .pdm/scripts/clean-build.sh", help = "remove build artifacts" }
clean-pyc = { shell = "bash .pdm/scripts/clean-pyc.sh", help = "remove Python file artifacts" }
clean-test = { shell = "bash .pdm/scripts/clean-test.sh", help = "remove test and coverage artifacts" }
clean = { shell = "pdm run clean-build && pdm run clean-pyc && pdm run clean-test", help = "remove all build, test, coverage and Python artifacts" }
docs-build = { shell = "mkdocs build", help = "Build the MkDocs documentation" }
docs-serve = { shell = "mkdocs serve", help = "Run the builtin development server" }
docs-deploy = { shell = "mkdocs gh-deploy", help = "Deploy your documentation to GitHub Pages" }
test = { shell = "pdm run pytest", help = "run tests with the default Python" }
init-core = { shell = "bash .pdm/scripts/init-core.sh" }
init-local = { shell = "bash .pdm/scripts/init-local.sh", env_file = "env/core.env" }
gh-secret = { shell = "gh secret set -f env/core.env" }
gcloud-core = { shell = "bash .pdm/scripts/gcloud-core-init.sh" }
gcloud-local = { shell = "bash .pdm/scripts/gcloud-local-init.sh" }
k8s-init = { shell = "bash .pdm/scripts/k8s-init.sh" }
k8s-secret = { shell = "bash .pdm/scripts/k8s-secret.sh" }
helm-install = { shell = "bash .pdm/scripts/helm-install.sh" }
merge-dev = { shell = "bash .pdm/scripts/merge-dev.sh" }
open-pr = { shell = "bash .pdm/scripts/open-pr.sh" }
validate = { shell = "python -c 'from teamster.local.repository import *'" }
stats = { shell = "python .dagster/stats/run-stats.py" }
